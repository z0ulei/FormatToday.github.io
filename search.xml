<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[树莓派自用备忘录]]></title>
    <url>%2F%E5%A4%87%E5%BF%98%E5%BD%95%2F2018%2F08%2F27%2FraspberryPI.html</url>
    <content type="text"><![CDATA[自用备忘 下载工具 系统镜像 (Raspbian Stretch with desktop) 内存卡格式化工具 (SDFormatter) 密码：o7gr 写镜像工具 (Win32DiskImager) 密码：2n6m 写入系统 用 SDFormatter 格式化sd卡 用 Win32DiskImager 写入系统镜像 boot分区添加ssh文件 修改系统修改源sudo nano /etc/apt/sources.listdeb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpideb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi------------------------------sudo nano /etc/apt/sources.list.d/raspi.listdeb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main uideb-src http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main ui 更新系统sudo apt updatesudo apt upgrade -ysudo reboot 更改设置 语言，时区 sudo apt install -y ttf-wqy-zenheisudo apt install -y scim-pinyinsudo raspi-config Localisation Options-&gt; Change Locale Change Timezonesudo reboot 更改usb电流 sudo nano /boot/config.txtmax_usb_current=1 查看磁盘信息 sudo fdisk –lsudo blkid 挂载u盘 sudo nano /etc/fstab/dev/sda1 /home/pi/usb ext4 defaults,noatime 0 0sudo reboot ​ aria2下载配置 下载 sudo apt install aria2 创建 配置文件 sudo mkdir /home/pi/.aria2sudo mkdir /home/pi/usb/downloadsudo touch /home/pi/.aria2/aria2.sessionsudo nano /home/pi/.aria2/aria2.conf ​ 配置 # 基本配置# 下载目录dir=/home/pi/usb/download# 下载从这个文件中找到的urls, 需自己建立这个文件input-file=/home/pi/.aria2/aria2.session# 最大同时下载任务数，默认 5#max-concurrent-downloads=5# 断点续传，只适用于 HTTP(S)/FTPcontinue=true# HTTP/FTP 配置# 关闭连接如果下载速度等于或低于这个值，默认 0#lowest-speed-limit=0# 对于每个下载在同一个服务器上的连接数，默认 1max-connection-per-server=10# 每个文件最小分片大小，例如文件 20M，设置 size 为 10M, 则用2个连接下载，默认 20M#min-split-size=10M# 下载一个文件的连接数，默认 5#split=10# RPC 配置# 开启 JSON-RPC/XML-RPC 服务，默认 falseenable-rpc=true# 允许所有来源，web 界面跨域权限需要，默认 falserpc-allow-origin-all=true# 允许外部访问，默认 falserpc-listen-all=true# rpc 端口，默认 6800rpc-listen-port=6800# 设置最大的 JSON-RPC/XML-RPC 请求大小，默认 2M#rpc-max-request-size=2M# rpc token验证#rpc-secret=FormatToday# 高级配置# This is useful if you have to use broken DNS and# want to avoid terribly slow AAAA record lookup.# 默认 falsedisable-ipv6=true# 指定文件分配方法，预分配能有效降低文件碎片，提高磁盘性能，缺点是预分配时间稍长# 如果使用新的文件系统，例如 ext4 (with extents support), btrfs, xfs or NTFS(MinGW build only), falloc 是最好的选择# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项# 如果设置为 none，那么不预先分配文件空间，默认 preallocfile-allocation=trunc# 整体下载速度限制，默认 0#max-overall-download-limit=0# 每个下载下载速度限制，默认 0#max-download-limit=0# 保存错误或者未完成的下载到这个文件# 和基本配置中的 input-file 一起使用，那么重启后仍可继续下载save-session=/home/pi/.aria2/aria2.session# 每5分钟自动保存错误或未完成的下载，如果为 0, 只有 aria2 正常退出才回保存，默认 0save-session-interval=300# BT 特殊配置# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:truefollow-torrent=true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999#listen-port=51413# 单个种子最大连接数, 默认:55#bt-max-peers=55# 打开DHT功能, PT需要禁用, 默认:trueenable-dht=true# 打开IPv6 DHT功能, PT需要禁用enable-dht6=true# DHT网络监听端口, 默认:6881-6999#dht-listen-port=6881-6999# 本地节点查找, PT需要禁用, 默认:falsebt-enable-lpd=true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange=true# 每个种子限速, 对少种的PT很有用, 默认:50K#bt-request-peer-speed-limit=50K# 客户端伪装, PT需要peer-id-prefix=-TR2770-user-agent=Transmission/2.77# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio=1.0# 强制保存会话, 即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件force-save=true# BT校验相关, 默认:true#bt-hash-check-seed=true# 继续之前的BT任务时, 无需再次校验, 默认:falsebt-seed-unverified=true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:falsebt-save-metadata=true#bt-tracker= 运行 aria2, 测试配置是否有错误，如果没有提示任何错误信息，那就按Ctrl+C停止。 aria2c --conf-path=/home/pi/.aria2/aria2.conf 为 aria2 添加自启动服务 sudo nano /etc/init.d/aria2c #! /bin/sh# /etc/init.d/aria2c### BEGIN INIT INFO# Provides: aria2c# Required-Start: $network $local_fs $remote_fs# Required-Stop: $network $local_fs $remote_fs# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: aria2c RPC init script.# Description: Starts and stops aria2 RPC services.### END INIT INFO#VARRUN=&quot;/usr/bin/aria2c&quot;ARIA_PID=$(ps ux | awk &apos;/aria2c --daemon=true --enable-rpc/ &amp;&amp; !/awk/ &#123;print $2&#125;&apos;)# Carry out specific functions when asked to by the systemcase &quot;$1&quot; in start) echo &quot;Starting script aria2c &quot; if [ -z &quot;$ARIA_PID&quot; ]; then $RUN --daemon=true --enable-rpc=true -D --conf-path=/home/pi/.aria2/aria2.conf echo &quot;Started&quot; else echo &quot;aria2c already started&quot; fi ;; stop) echo &quot;Stopping script aria2c&quot; if [ ! -z &quot;$ARIA_PID&quot; ]; then kill $ARIA_PID fi echo &quot;OK&quot; ;; restart) echo &quot;Restarting script aria2c&quot; if [ ! -z &quot;$ARIA_PID&quot; ]; then kill $ARIA_PID fi sleep 3 # TODO:Maybe need to be adjust $RUN --daemon=true --enable-rpc=true -D --conf-path=/home/pi/.aria2/aria2.conf echo &quot;OK&quot; ;; status) if [ ! -z &quot;$ARIA_PID&quot; ]; then echo &quot;The aria2c is running with PID = &quot;$ARIA_PID else echo &quot;No process found for aria2c RPC&quot; fi ;; *) echo &quot;Usage: /etc/init.d/aria2c &#123;start|stop|restart|status&#125;&quot; exit 1 ;;esacexit 0 sudo chmod +x /etc/init.d/aria2csudo update-rc.d aria2c defaultssudo service aria2c restart 安装web 前端yaaw或者webui-aria2来实现web管理 sudo apt install nginx sudo nano /etc/nginx/nginx.conf user www-data; #默认以www-data运行工作进程worker_processes auto; #单工作进程足够了，就我自己访问worker_connections 256; #一般支持100在线连接就达到raspberry pi的极限了gzip on; #gzip开启取消前面的#让默认设置生效即可，可以加快网页访问速度gzip_disable &quot;msie6&quot;;gzip_vary on;gzip_proxied any;gzip_comp_level 6;gzip_buffers 16 8k;gzip_http_version 1.1;gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript; 配置站点属性 sudo mkdir /var/www &amp;&amp; sudo mkdir /var/www/htmlsudo chown -R www-data:www-data /var/www/htmlsudo chmod -R 0755 /var/www/html 下载webui-aria2 cd /var/www/htmlsudo git clone https://github.com/ziahamza/webui-aria2.gitsudo mv webui-aria2 webuisudo service nginx restart如果提示链接到aria2 RPC server失败，重启aria2c服务，然后刷新网页即可。sudo service aria2c restart 安装MongoDBsudo apt install mongodb ​ 安装MySQLhttps://dev.mysql.com/downloads/repo/apt/sudo dpkg -i mysql-apt-***.debsudo apt-get updatesudo apt-get install mysql-server# 连接数据库use mysql;# 修改密码为123456，自己定UPDATE user SET password=PASSWORD(&apos;123456&apos;) WHERE user=&apos;root&apos;;# 改外网访问权限select user,host from user;# 刷新flush privileges;update user set host=&apos;%&apos; where user=&apos;root&apos;;# 刷新flush privileges;# 授权用户 任意主机以用户root和密码pwd连接到mysql服务器GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;pwd&apos; WITH GRANT OPTION;# 刷新flush privileges;# 退出exit;操作数据库服务sudo /etc/init.d/mysql statussudo /etc/init.d/mysql startsudo /etc/init.d/mysql stopsudo /etc/init.d/mysql restart]]></content>
      <categories>
        <category>备忘录</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Emmet的用法]]></title>
    <url>%2F%E5%89%8D%E7%AB%AF%2F2018%2F08%2F23%2FEmmet.html</url>
    <content type="text"><![CDATA[引入用类似css选择器的写法，生成HTML语句。 比如： #page&gt;div.logo+ul#navigation&gt;li*5&gt;a&#123;Item $&#125; 在支持的编辑器里按tab即可生成： &lt;div id="page"&gt; &lt;div class="logo"&gt;&lt;/div&gt; &lt;ul id="navigation"&gt; &lt;li&gt;&lt;a href=""&gt;Item 1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=""&gt;Item 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=""&gt;Item 3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=""&gt;Item 4&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=""&gt;Item 5&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; 标识符子节点 &gt;div&gt;ul&gt;li &lt;div&gt; &lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; 兄弟节点 +div+p+bq &lt;div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;/blockquote&gt; 上浮 ^div+div&gt;p&gt;span+em^bq &lt;div&gt;&lt;/div&gt;&lt;div&gt; &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;em&gt;&lt;/em&gt;&lt;/p&gt; &lt;blockquote&gt;&lt;/blockquote&gt;&lt;/div&gt; div+div&gt;p&gt;span+em^^^bq &lt;div&gt;&lt;/div&gt;&lt;div&gt; &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;em&gt;&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;/blockquote&gt; 倍数 *div+p+bq &lt;div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;/blockquote&gt; 分组 ()div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p &lt;div&gt; &lt;header&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/header&gt; &lt;footer&gt; &lt;p&gt;&lt;/p&gt; &lt;/footer&gt;&lt;/div&gt; (div&gt;dl&gt;(dt+dd)*3)+footer&gt;p &lt;div&gt; &lt;dl&gt; &lt;dt&gt;&lt;/dt&gt; &lt;dd&gt;&lt;/dd&gt; &lt;dt&gt;&lt;/dt&gt; &lt;dd&gt;&lt;/dd&gt; &lt;dt&gt;&lt;/dt&gt; &lt;dd&gt;&lt;/dd&gt; &lt;/dl&gt;&lt;/div&gt;&lt;footer&gt; &lt;p&gt;&lt;/p&gt;&lt;/footer&gt; id \div#header &lt;div id="header"&gt;&lt;/div&gt; class .div.page &lt;div class="page"&gt;&lt;/div&gt; div#header+div.page+div#footer.class1.class2.class3 &lt;div id="header"&gt;&lt;/div&gt;&lt;div class="page"&gt;&lt;/div&gt;&lt;div id="footer" class="class1 class2 class3"&gt;&lt;/div&gt; 自定义属性 []td[title=&quot;Hello world!&quot; colspan=3] &lt;td title="Hello world!" colspan="3"&gt;&lt;/td&gt; 自增长 $ul&gt;li.item$*5 &lt;ul&gt; &lt;li class="item1"&gt;&lt;/li&gt; &lt;li class="item2"&gt;&lt;/li&gt; &lt;li class="item3"&gt;&lt;/li&gt; &lt;li class="item4"&gt;&lt;/li&gt; &lt;li class="item5"&gt;&lt;/li&gt;&lt;/ul&gt; ul&gt;li.item$$$*5 &lt;ul&gt; &lt;li class="item001"&gt;&lt;/li&gt; &lt;li class="item002"&gt;&lt;/li&gt; &lt;li class="item003"&gt;&lt;/li&gt; &lt;li class="item004"&gt;&lt;/li&gt; &lt;li class="item005"&gt;&lt;/li&gt;&lt;/ul&gt; ul&gt;li.item$@-*5 &lt;ul&gt; &lt;li class="item5"&gt;&lt;/li&gt; &lt;li class="item4"&gt;&lt;/li&gt; &lt;li class="item3"&gt;&lt;/li&gt; &lt;li class="item2"&gt;&lt;/li&gt; &lt;li class="item1"&gt;&lt;/li&gt;&lt;/ul&gt; ul&gt;li.item$@3*5 &lt;ul&gt; &lt;li class="item3"&gt;&lt;/li&gt; &lt;li class="item4"&gt;&lt;/li&gt; &lt;li class="item5"&gt;&lt;/li&gt; &lt;li class="item6"&gt;&lt;/li&gt; &lt;li class="item7"&gt;&lt;/li&gt;&lt;/ul&gt; ul&gt;li.item$@-3*5 &lt;ul&gt; &lt;li class="item7"&gt;&lt;/li&gt; &lt;li class="item6"&gt;&lt;/li&gt; &lt;li class="item5"&gt;&lt;/li&gt; &lt;li class="item4"&gt;&lt;/li&gt; &lt;li class="item3"&gt;&lt;/li&gt;&lt;/ul&gt; 文本 {}a&#123;Click me&#125; &lt;a href=""&gt;Click me&lt;/a&gt; a&#123;click&#125;+b&#123;here&#125; &lt;a href=""&gt;click&lt;/a&gt;&lt;b&gt;here&lt;/b&gt; a&gt;&#123;click&#125;+b&#123;here&#125; &lt;a href=""&gt;click&lt;b&gt;here&lt;/b&gt;&lt;/a&gt; p&gt;&#123;Click &#125;+a&#123;here&#125;+&#123; to continue&#125; &lt;p&gt;Click &lt;a href=""&gt;here&lt;/a&gt; to continue&lt;/p&gt; p&#123;Click &#125;+a&#123;here&#125;+&#123; to continue&#125; &lt;p&gt;Click &lt;/p&gt;&lt;a href=""&gt;here&lt;/a&gt; to continue 注意不要在Emmet中添加空格，比如：(header &gt; ul.nav &gt; li*5) + footer 这样会无法识别。]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Emmet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HelloWorld]]></title>
    <url>%2F%E9%9A%8F%E7%AC%94%2F2018%2F08%2F22%2Fhelloworld.html</url>
    <content type="text"><![CDATA[各种编程语言的 Hello World 。 做点贡献大家可以为本文添砖加瓦，只要在最底部评论区评论就行，我看到的时候会加进来的。谢啦。 C#include&lt;stdlib.h&gt;int main()&#123; system("echo HelloWorld"); return 0; &#125; C++#include&lt;iostream&gt;using namespace std;int main()&#123; cout&lt;&lt;"HelloWorld"; return 0; &#125; javapublic class HelloWorld &#123; public static void main(String[] args) &#123; System.out.println("HelloWorld"); &#125;&#125; pythonprint ('HelloWorld') html&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; HelloWorld &lt;/body&gt;&lt;/html&gt; pascalprogram hello;Begin writeln("HelloWorld"); readln;End. rubyputs "HelloWorld" javascriptconsole.log("HelloWorld"); php&lt;?echo"HelloWorld";?&gt; C sharpusing system;namespace HelloWorld&#123; class programe &#123; static void main(String[] args) &#123; Console.WriteLine(&quot;HelloWorld&quot;); Console.ReadKey(); &#125; &#125;&#125; gopackage mainimport "fmt"func main()&#123; fmt.printf("HelloWorld")&#125; matlabdisp('Hello World');]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>杂七杂八</tag>
      </tags>
  </entry>
</search>
